name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test
    environment: heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version-file: .nvmrc
          cache-dependency-path: yarn.lock

      - name: Install Dependencies
        run: yarn

      - name: Run Tests
        run: yarn woop

  stage:
    name: Deploy to Heroku Staging
    needs: [test]
    if: github.ref != 'refs/heads/main'
    environment: heroku
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Fetch PR Number
        uses: jwalton/gh-find-current-pr@v1.2.1
        id: findPr
        with:
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Create Heroku App
        if: success() && steps.findPr.outputs.number
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          PR: ${{ steps.findPr.outputs.pr }}
        run: |
          if [[ "$(heroku apps | grep -c jbanass-site-$PR)" -ge 1 ]]; then
            echo "App already created"
          else
            heroku apps:create jbanass-site-$PR --no-remote
          fi

          heroku container:login
          heroku container:push --arg ENV=production,SHA=$GITHUB_SHA -a jbanass-site-$PR --recursive
          heroku container:release web -a jbanass-site-$PR

  deploy:
    name: Deploy to live
    needs: [test]
    if: github.ref == 'refs/heads/main'
    environment: heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push --arg ENV=production,SHA=$GITHUB_SHA -a jbanass-site --recursive

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web -a jbanass-site

  cleanup:
    name: Cleanup Stage
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: heroku
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
        
      - name: Grab PR Number From Description
        id: findPr
        run: 
          echo "::set-output name=PR::$(echo '${{ github.event.commits[0].message }}' | grep -Eo '[0-9]*' | head -1)"

      - name: Cleanup Staging Env
        if: success() && steps.findPr.outputs.PR
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          PR: ${{ steps.findPr.outputs.PR }}
        run: heroku apps:destroy -a jbanass-site-$PR --confirm
